version: 2.1

executors:
  docker-executor:
    docker:
      - image: php:8.2-fpm-alpine
    working_directory: ~/repo

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout

      # Install PHP dependencies and Composer
      - run:
          name: Install PHP dependencies and Composer
          command: |
            apk add --no-cache libjpeg-turbo-dev libpng-dev freetype-dev
            docker-php-ext-configure gd --with-freetype --with-jpeg
            docker-php-ext-install gd
            docker-php-ext-install pdo pdo_mysql exif
            docker-php-ext-enable exif
            curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            cd src
            composer install --prefer-dist --no-interaction --optimize-autoloader --no-dev

      # Run Laravel tests
      - run:
          name: Run Laravel Tests
          command: |
            cd src
            cp .env.example .env
            # Write the provided .env content
            echo 'APP_NAME=Laravel' >> .env
            echo 'APP_ENV=local' >> .env
            echo 'APP_KEY=base64:HeNgMQOR6kIk2e6EADYGEeuPC9FrOqd7UX/q1K9Uu+8=' >> .env
            echo 'APP_DEBUG=true' >> .env
            echo 'APP_URL=http://localhost' >> .env
            echo 'LOG_CHANNEL=stack' >> .env
            echo 'LOG_DEPRECATIONS_CHANNEL=null' >> .env
            echo 'LOG_LEVEL=debug' >> .env
            echo 'DB_CONNECTION=mysql' >> .env
            echo 'DB_HOST=pord-ninetyplus-central.czuosieys0pm.us-east-1.rds.amazonaws.com' >> .env
            echo 'DB_PORT=3306' >> .env
            echo 'DB_DATABASE=pord-ninetyplus-central' >> .env
            echo 'DB_USERNAME=admin' >> .env
            echo 'DB_PASSWORD=\.\%T6YPi\$bIw8Zd\$t\(eJ6\?\*P3ZzzL' >> .env
            echo 'PAYPAL_MODE=sandbox' >> .env
            echo 'PAYPAL_SANDBOX_CLIENT_ID=AWpgymUdV9FHxhzgLJitG13h8Np5SQZh4_6Z33gKli9Vdp6QpK3dWX25s8_qtDs5prVSNcGvaKeFWCco' >> .env
            echo 'PAYPAL_SANDBOX_CLIENT_SECRET=EJT8MWvVjmQAALgprh7o4giob7SZ42GIyjZF5v8F3ipbQLQ6N_gfX-uDfbrFY_7N2ryxhDHL2vysE632' >> .env
            echo 'BROADCAST_DRIVER=log' >> .env
            echo 'CACHE_DRIVER=file' >> .env
            echo 'FILESYSTEM_DISK=s3' >> .env
            echo 'QUEUE_CONNECTION=sync' >> .env
            echo 'SESSION_DRIVER=file' >> .env
            echo 'SESSION_LIFETIME=120' >> .env
            echo 'MEMCACHED_HOST=127.0.0.1' >> .env
            echo 'REDIS_HOST=127.0.0.1' >> .env
            echo 'REDIS_PASSWORD=null' >> .env
            echo 'REDIS_PORT=6379' >> .env
            echo 'MAIL_MAILER=smtp' >> .env
            echo 'MAIL_HOST=sandbox.smtp.mailtrap.io' >> .env
            echo 'MAIL_PORT=587' >> .env
            echo 'MAIL_USERNAME=4cf3ea16e0c99b' >> .env
            echo 'MAIL_PASSWORD=f364e9cdb4efb6' >> .env
            echo 'MAIL_ENCRYPTION=tls' >> .env
            echo 'MAIL_FROM_ADDRESS="hello@example.com"' >> .env
            echo 'MAIL_FROM_NAME="Your Application Name"' >> .env
            echo 'QUEUE_CONNECTION=database' >> .env
            echo 'AWS_ACCESS_KEY_ID=AKIATCKARDA3LIJ74E6M' >> .env
            echo 'AWS_SECRET_ACCESS_KEY=R9Kb+Y+7jN0qxcpQvZwQdTGVQkvhgc3Caqstp/lt' >> .env
            echo 'AWS_DEFAULT_REGION=us-east-1' >> .env
            echo 'AWS_BUCKET=ninety-plus' >> .env
            echo 'AWS_USE_PATH_STYLE_ENDPOINT=false' >> .env
            echo 'AWS_URL=https://ninety-plus.s3.us-east-1.amazonaws.com' >> .env
            echo 'PUSHER_APP_ID=' >> .env
            echo 'PUSHER_APP_KEY=' >> .env
            echo 'PUSHER_APP_SECRET=' >> .env
            echo 'PUSHER_HOST=' >> .env
            echo 'PUSHER_PORT=443' >> .env
            echo 'PUSHER_SCHEME=https' >> .env
            echo 'PUSHER_APP_CLUSTER=mt1' >> .env
            echo 'VITE_APP_NAME="${APP_NAME}"' >> .env
            echo 'VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"' >> .env
            echo 'VITE_PUSHER_HOST="${PUSHER_HOST}"' >> .env
            echo 'VITE_PUSHER_PORT="${PUSHER_PORT}"' >> .env
            echo 'VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"' >> .env
            echo 'VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"' >> .env
            echo 'JWT_SECRET=YPCgTxGJYnjfboiOri5VMSE91m6YOt34MWkylRn9vLBQQgmwEf0OB28M6ttVV1uu' >> .env
            echo 'MEDIA_DISK=s3' >> .env
            echo 'STRIPE_SECRET_KEY=sk_test_51PTpjJ2L2UU5Zpim8ZPjzdfDVudgldDMEAM8NPzLeEsDbFxssmL8vyLQhq4sWfGoGyZ8ZTedfhambxZftval2VVq00eRRB1P11' >> .env
            echo 'CURRENCY=usd' >> .env
            echo 'FRONT_END_DOMAIN=http://localhost:3000/' >> .env
            echo 'STREAM_API_KEY=whsuc3edb47g' >> .env
            echo 'STREAM_API_SECRET=uut3bgrw5v5aq94eavw8za9dtn7c4vjuyb64bq2amjb3naybdxttht927e6tv6y7' >> .env
            echo 'STREAM_APP_ID=1319248' >> .env

            # Output the environment variables for debugging
            echo "DB_CONNECTION=mysql"
            echo "DB_HOST=pord-ninetyplus-central.czuosieys0pm.us-east-1.rds.amazonaws.com"
            echo "DB_PORT=3306"
            echo "DB_DATABASE=pord-ninetyplus-central"
            echo "DB_USERNAME=admin"
            echo "DB_PASSWORD=\.\%T6YPi\$bIw8Zd\$t\(eJ6\?\*P3ZzzL"

            php artisan config:clear
            php artisan config:cache
            php artisan migrate --force
            php artisan test

  deploy:
    executor: docker-executor
    steps:
      - setup_remote_docker:
          version: 20.10.7

      - checkout

      - run:
          name: Build Docker Image
          command: docker-compose -f docker-compose.prod.yml build

      - run:
          name: Push Docker Images
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker-compose -f docker-compose.prod.yml push

      - add_ssh_keys:
          fingerprints:
            - "SHA256:1r+0RI8mIHtGT9P+b/LWVjSJufWbk/mh+dFb2M/uRWQ"

      - run:
          name: Deploy Application
          command: |
            echo 'docker-compose -f /path/to/your/docker-compose.prod.yml pull
            docker-compose -f /path/to/your/docker-compose.prod.yml up -d
            docker-compose -f /path/to/your/docker-compose.prod.yml exec php php artisan migrate --force
            docker-compose -f /path/to/your/docker-compose.prod.yml exec php php artisan config:cache
            docker-compose -f /path/to/your/docker-compose.prod.yml exec php php artisan route:cache
            docker-compose -f /path/to/your/docker-compose.prod.yml exec php php artisan view:cache' | ssh -o StrictHostKeyChecking=no ubuntu@$SSH_HOST

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
