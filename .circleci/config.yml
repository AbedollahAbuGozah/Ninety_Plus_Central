version: 2.1

executors:
  docker-executor:
    docker:
      - image: php:8.2-fpm-alpine
    working_directory: ~/repo

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout

      # Install PHP dependencies and Composer
      - run:
          name: Install PHP dependencies and Composer
          command: |
            apk add --no-cache libjpeg-turbo-dev libpng-dev freetype-dev
            docker-php-ext-configure gd --with-freetype --with-jpeg
            docker-php-ext-install gd
            docker-php-ext-install pdo pdo_mysql exif
            docker-php-ext-enable exif
            curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            cd src
            composer install --prefer-dist --no-interaction --optimize-autoloader --no-dev

      # Run Laravel tests
      - run:
          name: Run Laravel Tests
          command: |
            cd src
            cp .env.example .env
            php artisan key:generate
            php artisan migrate --force
            php artisan test

  deploy:
    executor: docker-executor
    steps:
      - setup_remote_docker:
          version: 20.10.7

      - checkout

      - run:
          name: Build Docker Image
          command: docker-compose -f docker-compose.prod.yml build

      - run:
          name: Push Docker Images
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker-compose -f docker-compose.prod.yml push

      - add_ssh_keys:
          fingerprints:
            - "SHA256:1r+0RI8mIHtGT9P+b/LWVjSJufWbk/mh+dFb2M/uRWQ"

      - run:
          name: Deploy Application
          command: |
            echo 'docker-compose -f /path/to/your/docker-compose.prod.yml pull
            docker-compose -f /path/to/your/docker-compose.prod.yml up -d
            docker-compose -f /path/to/your/docker-compose.prod.yml exec php php artisan migrate --force
            docker-compose -f /path/to/your/docker-compose.prod.yml exec php php artisan config:cache
            docker-compose -f /path/to/your/docker-compose.prod.yml exec php php artisan route:cache
            docker-compose -f /path/to/your/docker-compose.prod.yml exec php php artisan view:cache' | ssh -o StrictHostKeyChecking=no ubuntu@$SSH_HOST

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
